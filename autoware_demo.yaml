flow: AutowareDemo # it should have a id, from this we will have an Instance of the graph, UUID => flow
operators:
  # - id : GloablPlanner # this should be unique in the graph
  #   uri: file://./target/release/libzenoh_flow_lanelet2_global_planner_nodes.so
  #   inputs:
  #     - id: goal_pose
  #       type: geometry_msgs_PoseStamped
  #     - id: current_pose
  #       type: autoware_auto_msgs_VehicleKinematicState
  #   outputs:
  #     - id: route
  #       type: autoware_auto_msgs_HADMapRoute
  # - id : BehaviorPlanner # this should be unique in the graph
  #   uri: file://./target/release/libzenoh_flow_behavior_planner_nodes.so
  #   inputs:
  #     - id: vehicle_kinematic_state
  #       type: autoware_auto_msgs_VehicleKinematicState
  #     - id: hadmap_route
  #       type: autoware_auto_msgs_HADMapRoute
  #     - id: vehicle_state_report
  #       type: autoware_auto_msgs_VehicleStateReport
  #   outputs:
  #     - id: trajectory
  #       type: autoware_auto_msgs_Trajectory
  #     - id: vehicle_state_command
  #       type: autoware_auto_msgs_VehicleStateCommand
  #   configuration:
  #     enable_object_collision_estimator: true
  #     heading_weight: 0.1
  #     goal_distance_thresh: 3.0
  #     stop_velocity_thresh: 2.0
  #     subroute_goal_offset_lane2parking: 7.6669
  #     subroute_goal_offset_parking2lane: 7.6669
  #     cg_to_front_m: 1.228
  #     cg_to_rear_m: 1.5618
  #     front_overhang_m: 0.5
  #     rear_overhang_m: 0.5
  # - id : PurePursuit # this should be unique in the graph
  #   uri: file://./target/release/libzenoh_flow_pure_pursuit.so
  #   inputs:
  #     - id: trajectory
  #       type: autoware_auto_msgs_Trajectory
  #     - id: vehicle_kinematic_state
  #       type: autoware_auto_msgs_VehicleKinematicState
  #   outputs:
  #     - id: vehicle_control_command
  #       type: autoware_auto_msgs_VehicleControlCommand
  - id : zenoh_flow_simple_planning_simulator
    uri: file://./install/lib/libzenoh_flow_simple_planning_simulator.so
    inputs:
      - id: tick
        type: usize
      # - id: InitPose
      #   type: geometry_msgs_PoseWithCovarianceStamped
      # - id: VehicleCmd
      #   type: autoware_auto_msgs_VehicleControlCommand
      # - id: StateCmd
      #   type: autoware_auto_msgs_VehicleStateCommand
    outputs:
      # - id: CurrentPose
      #   type: geometry_msgs_PoseStamped
      # - id: KinematicState
      #   type: autoware_auto_msgs_VehicleKinematicState
      # - id: StateReport
      #   type: autoware_auto_msgs_VehicleStateReport
      - id: log
        type: Str
    configuration:
      simulated_frame_id: base_link
      origin_frame_id: odom
      vehicle_model_type: IDEAL_STEER_VEL
      initialize_source: INITIAL_POSE_TOPIC
      timer_sampling_time_ms: 25
      add_measurement_noise: false
      vel_lim: 30.0
      vel_rate_lim: 30.0
      steer_lim: 0.6
      steer_rate_lim: 6.28
      acc_time_delay: 0.1
      acc_time_constant: 0.1
      steer_time_delay: 0.1
      steer_time_constant: 0.1
sources: # sources can have only ONE output
  - id : zenoh_flow_tick_source
    uri: file://./target/release/libzenoh_flow_tick_source.so
    output:
      id: tick
      type: usize
    configuration:
      hz: 10
  # - id : Lanelet2MapProvider
  #   uri: file://./target/release/libzenoh_flow_lanelet2_map_provider.so
  #   output:
  #     id: mode
  #     type: usize
  #   configuration:
  #     map_osm_file: ./**.map
  #     origin_offset_lat: 0.0
  #     origin_offset_lon: 0.0
  #     latitude: 37.380811523812845
  #     longitude: -121.90840595108715,
  #     elevation: -121.90840595108715
sinks:
  - id: zenoh_flow_system_monitor
    uri: file://./target/release/libzenon_flow_system_monitor.so
    input:
      id: log
      type: Str
links:
- from:
    node : zenoh_flow_tick_source
    output : tick
  to:
    node : zenoh_flow_simple_planning_simulator
    input : tick
- from:
    node : zenoh_flow_simple_planning_simulator
    output : log
  to:
    node : zenoh_flow_system_monitor
    input : log
# - from:
#     node : GloablPlanner
#     output : autoware_auto_msgs_HADMapRoute
#   to:
#     node : BehaviorPlanner
#     input : autoware_auto_msgs_HADMapRoute
# - from:
#     node : BehaviorPlanner
#     output : autoware_auto_msgs_Trajectory
#   to:
#     node : PurePursuit
#     input : autoware_auto_msgs_Trajectory
# - from:
#     node : BehaviorPlanner
#     output : autoware_auto_msgs_Trajectory
#   to:
#     node : PurePursuit
#     input : autoware_auto_msgs_Trajectory
# - from:
#     node : PurePursuit
#     output : autoware_auto_msgs_VehicleControlCommand
#   to:
#     node : SimplePlanningSimulator
#     input : autoware_auto_msgs_VehicleControlCommand
